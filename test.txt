import { ethers } from 'ethers';
import POOL_ABI  from './abi';
import fs  from 'fs';
// Pool ABI - chỉ include các events chúng ta cần

async function listenToPoolEvents() {
  // Kết nối đến Ethereum network
  const provider = new ethers.WebSocketProvider('wss://ethereum-rpc.publicnode.com');
  
  // Địa chỉ của Pool contract
  const POOL_ADDRESS = '0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2';
  
  // Tạo contract interface
  const poolContract = new ethers.Contract(POOL_ADDRESS, POOL_ABI, provider);

  // Lắng nghe sự kiện Supply
  // poolContract.on("Supply", (reserve, user, onBehalfOf, amount, referralCode, event) => {
  //   const log = `Sự kiện Supply: \n` +
  //     `  - Reserve: ${reserve} \n` +
  //     `  - Người dùng: ${user} \n` +
  //     `  - Trên behalf của: ${onBehalfOf} \n` +
  //     `  - Số lượng: ${ethers.formatEther(amount)} \n` +
  //     `  - Mã giới thiệu: ${referralCode} \n` +
  //     `  - Block number: ${event.blockNumber} \n` +
  //     `  - Transaction hash: ${event.transactionHash} \n`;
  //   console.log(log);
  //   fs.appendFile('supply.log', log + '\n', (err) => {
  //     if (err) {
  //       console.error('Lỗi ghi log:', err);
  //     }
  //   });
  // });

  // Lắng nghe sự kiện Borrow
  poolContract.on("Borrow", (reserve, user, onBehalfOf, amount, interestRateMode, borrowRate, referralCode, event) => {
    const log = `Sự kiện Borrow: \n` +
      `  - Reserve: ${reserve} \n` +
      `  - Người dùng: ${user} \n` +
      `  - Trên behalf của: ${onBehalfOf} \n` +
      `  - Số lượng: ${ethers.formatEther(amount)} \n` +
      `  - Interest rate mode: ${interestRateMode} \n` +
      `  - Borrow rate: ${borrowRate.toString()} \n` +
      `  - Mã giới thiệu: ${referralCode} \n` +
      `  - Block number: ${event.blockNumber} \n` +
      `  - Transaction hash: ${event.transactionHash} \n`;
    console.log(log);
    fs.appendFile('borrow.log', log + '\n', (err) => {
      if (err) {
        console.error('Lỗi ghi log:', err);
      }
    });
  });

  // Lắng nghe sự kiện Repay
  // poolContract.on("Repay", (reserve, user, repayer, amount, useATokens, event) => {
  //   const log = `Sự kiện Repay: \n` +
  //     `  - Reserve: ${reserve} \n` +
  //     `  - Người dùng: ${user} \n` +
  //     `  - Người trả nợ: ${repayer} \n` +
  //     `  - Số lượng: ${ethers.formatEther(amount)} \n` +
  //     `  - Sử dụng aTokens: ${useATokens} \n` +
  //     `  - Block number: ${event.blockNumber} \n` +
  //     `  - Transaction hash: ${event.transactionHash} \n`;
  //   console.log(log);
  //   fs.appendFile('repay.log', log + '\n', (err) => {
  //     if (err) {
  //       console.error('Lỗi ghi log:', err);
  //     }
  //   });
  // });

  // Lắng nghe sự kiện Withdraw
  // poolContract.on("Withdraw", (reserve, user, to, amount, event) => {
  //   const log = `Sự kiện Withdraw: \n` +
  //     `  - Reserve: ${reserve} \n` +
  //     `  - Người dùng: ${user} \n` +
  //     `  - Đến: ${to} \n` +
  //     `  - Số lượng: ${ethers.formatEther(amount)} \n` +
  //     `  - Block number: ${event.blockNumber} \n` +
  //     `  - Transaction hash: ${event.transactionHash} \n`;
  //   console.log(log);
  //   fs.appendFile('withdraw.log', log + '\n', (err) => {
  //     if (err) {
  //       console.error('Lỗi ghi log:', err);
  //     }
  //   });
  // });

  console.log('Đã bắt đầu lắng nghe các sự kiện của Aave Pool...');
}

// Chạy hàm chính
listenToPoolEvents().catch((error) => {
  console.error('Lỗi trong hàm chính:', error);
});
